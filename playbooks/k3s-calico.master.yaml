---
- name: Install K3s
  hosts: all
  become: true

  tasks:
    - name: Check DNS configuration
      shell: cat /etc/resolv.conf
      register: dns_config

    - name: Display DNS configuration
      debug:
        msg: "Current DNS configuration: {{ dns_config.stdout_lines }}"

    - name: Add localhost to hosts file
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 localhost"
        state: present
      ignore_errors: true

    - name: Update apt cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600
        force_apt_get: yes

    - name: Install CalicoCtl
      shell: |
        curl -L https://github.com/projectcalico/calico/releases/latest/download/calicoctl-linux-amd64 -o calicoctl
        chmod +x calicoctl
        mv calicoctl /usr/local/bin/

    - name: Install K3s
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --disable traefik --flannel-backend=none --disable-network-policy" sh -

    - name: Set Kubeconfig
      shell: |
        mkdir -p ~/.kube
        cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
        chown $(id -u):$(id -g) ~/.kube/config
        export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

    - name: Install Calico Operator
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/operator-crds.yaml
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/tigera-operator.yaml

    - name: Install Calico
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/custom-resources.yaml
        kubectl patch installation default --type=merge --patch='{"spec":{"calicoNetwork":{"contai nerIPForwarding":"Enabled"}}}'

    - name: Install Nginx Ingress Controller
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml

    - name: Install Cert Manager
      shell: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.yaml

    - name: Wait for Calico pods to be ready
      shell: |
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=csi-node-driver -n calico-system --timeout=300s
      ignore_errors: true

    - name: Display cluster status
      shell: |
        echo "=== K3s Cluster Status ==="
        kubectl get nodes
        echo "=== Calico System Pods ==="
        kubectl get pods -n calico-system
        echo "=== Cluster is ready for Docker registry patching ==="
